{
.appVersion = "3257";
.formatVersion = 3;
axes = (
{
name = Mashq;
tag = MSHQ;
}
);
customParameters = (
{
name = "Virtual Master";
value = (
{
Axis = Mashq;
Location = 0;
}
);
},
{
name = "Virtual Master";
value = (
{
Axis = Mashq;
Location = 100;
}
);
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Write lastChange";
value = 0;
},
{
name = "Write DisplayStrings";
value = 0;
}
);
date = "2024-03-21 17:45:22 +0000";
familyName = Astrolabe;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem arab dflt;
";
name = Languagesystems;
},
{
code = "lookup high_tooth {
	sub behDotless-ar.init	by behDotless-ar.init.high;
	sub behDotless-ar.medi	by behDotless-ar.medi.high;
	sub behDotless-ar.fina	by behDotless-ar.fina.high;
} high_tooth;
";
name = Lookups;
}
);
features = (
{
automatic = 1;
code = "feature init;
feature medi;
feature fina;
feature salt;
";
tag = aalt;
},
{
code = "sub alefHamzaabove-ar	by alef-ar hamzaabove-ar;
sub alefHamzabelow-ar	by alef-ar hamzabelow-ar;
sub alefMadda-ar		by alef-ar madda-ar;
sub beh-ar				by behDotless-ar dotbelow-ar;
sub teh-ar				by behDotless-ar twodotshorizontalabove-ar;
sub theh-ar				by behDotless-ar threedotsupabove-ar;
sub jeem-ar				by hah-ar.alt dotbelow-ar;
sub khah-ar				by hah-ar dotabove-ar;
sub thal-ar				by dal-ar dotabove-ar;
sub zain-ar				by reh-ar dotabove-ar;
sub sheen-ar			by seen-ar threedotsupabove-ar;
sub dad-ar				by sad-ar dotabove-ar;
sub zah-ar				by tah-ar dotabove-ar;
sub ghain-ar			by ain-ar dotabove-ar;
sub feh-ar				by fehDotless-ar dotabove-ar;
sub qaf-ar				by qafDotless-ar twodotshorizontalabove-ar;
sub noon-ar				by noonghunna-ar dotabove-ar;
sub wawHamzaabove-ar	by waw-ar hamzaabove-ar;
sub yeh-ar				by alefMaksura-ar twodotshorizontalbelow-ar;
sub yehHamzaabove-ar	by alefMaksura-ar hamza-ar;
";
tag = ccmp;
},
{
code = "sub behDotless-ar	by behDotless-ar.init;
sub hah-ar			by hah-ar.init;
sub hah-ar.alt		by hah-ar.init;
sub seen-ar			by seen-ar.init;
sub sad-ar			by sad-ar.init;
sub tah-ar			by tah-ar.init;
sub ain-ar			by ain-ar.init;
sub fehDotless-ar	by fehDotless-ar.init;
sub qafDotless-ar	by fehDotless-ar.init;
sub kaf-ar			by kaf-ar.init;
sub lam-ar			by lam-ar.init;
sub meem-ar			by meem-ar.init;
sub noonghunna-ar	by behDotless-ar.init;
sub heh-ar			by heh-ar.init;
sub alefMaksura-ar	by behDotless-ar.init;
";
tag = init;
},
{
code = "sub behDotless-ar	by behDotless-ar.medi;
sub hah-ar			by hah-ar.medi;
sub hah-ar.alt		by hah-ar.medi;
sub seen-ar			by seen-ar.medi;
sub sad-ar			by sad-ar.medi;
sub tah-ar			by tah-ar.medi;
sub ain-ar			by ain-ar.medi;
sub fehDotless-ar	by fehDotless-ar.medi;
sub qafDotless-ar	by fehDotless-ar.medi;
sub kaf-ar			by kaf-ar.medi;
sub lam-ar			by lam-ar.medi;
sub meem-ar			by meem-ar.medi;
sub noonghunna-ar	by behDotless-ar.medi;
sub heh-ar			by heh-ar.medi;
sub alefMaksura-ar	by behDotless-ar.medi;
";
tag = medi;
},
{
code = "sub alef-ar			by alef-ar.fina;
sub behDotless-ar	by behDotless-ar.fina;
sub hah-ar			by hah-ar.fina;
sub hah-ar.alt		by hah-ar.alt.fina;
sub dal-ar			by dal-ar.fina;
sub reh-ar			by reh-ar.fina;
sub seen-ar			by seen-ar.fina;
sub sad-ar			by sad-ar.fina;
sub tah-ar			by tah-ar.fina;
sub ain-ar			by ain-ar.fina;
sub fehDotless-ar	by fehDotless-ar.fina;
sub qafDotless-ar	by qafDotless-ar.fina;
sub kaf-ar			by kaf-ar.fina;
sub lam-ar			by lam-ar.fina;
sub meem-ar			by meem-ar.fina;
sub noonghunna-ar	by noonghunna-ar.fina;
sub heh-ar			by heh-ar.fina;
sub tehMarbuta-ar	by heh-ar.fina twodotshorizontalabove-ar;
sub waw-ar			by waw-ar.fina;
sub alefMaksura-ar	by alefMaksura-ar.fina;
sub yehbarree-ar	by yehbarree-ar.fina;
";
tag = fina;
},
{
code = "@dots = [dotabove-ar dotbelow-ar twodotshorizontalabove-ar twodotshorizontalbelow-ar threedotsupabove-ar];
sub @dots by NULL;
";
labels = (
{
language = ENG;
value = "Dot-less Letter Forms";
},
{
language = ARA;
value = "حروف مهملة (بلا نقاط)";
}
);
tag = ss01;
},
{
code = "lookup rlig_isol {
	sub tehMarbuta-ar by heh-ar twodotshorizontalabove-ar;
} rlig_isol;

lookup rlig_lam_alef {
	lookupflag IgnoreMarks;
	sub lam-ar.init alef-ar.fina by lam_alef-ar;
	sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
} rlig_lam_alef;

lookup rlig_teeth {
	lookupflag IgnoreMarks;
	sub [behDotless-ar.init behDotless-ar.medi sad-ar.init sad-ar.medi]
		[behDotless-ar.medi]' lookup high_tooth
		[behDotless-ar.medi	behDotless-ar.fina]
	;
	sub [seen-ar.init seen-ar.medi]
		[behDotless-ar.medi behDotless-ar.fina]' lookup high_tooth
	;
} rlig_teeth;

@horizontal_dots_above = [twodotshorizontalabove-ar threedotsupabove-ar];
@beh_init_medi = [behDotless-ar.init behDotless-ar.init.high behDotless-ar.medi behDotless-ar.medi.high];
lookup rlig_wide_tooth_1 {
	lookupflag UseMarkFilteringSet @horizontal_dots_above;
	sub	 @beh_init_medi
		 @horizontal_dots_above'
		[alef-ar.fina lam-ar.medi lam-ar.fina]
	by	 @horizontal_dots_above kashida-ar.20
	;
} rlig_wide_tooth_1;

lookup rlig_wide_tooth_2 {
	lookupflag UseMarkFilteringSet [@horizontal_dots_above dotabove-ar];
	sub	 @beh_init_medi
		 @horizontal_dots_above'
		 @beh_init_medi
		 dotabove-ar
	by	 @horizontal_dots_above kashida-ar.20
	;
	sub	 @beh_init_medi
		 dotabove-ar'
		 @beh_init_medi
		 @horizontal_dots_above
	by	 dotabove-ar kashida-ar.20
	;
	sub	 @beh_init_medi
		 @horizontal_dots_above'
		 @beh_init_medi
		 @horizontal_dots_above
	by	 @horizontal_dots_above kashida-ar
	;
} rlig_wide_tooth_2;
";
tag = rclt;
},
{
code = "sub hah-ar				by hah-ar.alt;
sub hah-ar.fina			by hah-ar.alt.fina;
sub ain-ar.medi			by ain-ar.medi.alt;
sub	ain-ar.fina			by ain-ar.fina.alt;
sub fehDotless-ar.medi	by fehDotless-ar.medi.alt;";
tag = salt;
}
);
fontMaster = (
{
axesValues = (
10
);
id = m01;
metricValues = (
{
over = 16;
pos = 800;
},
{
over = -16;
},
{
over = -16;
pos = -200;
},
{
over = 16;
pos = 550;
},
{
over = 16;
pos = 50;
},
{
over = -16;
pos = -400;
}
);
name = Regular;
userData = {
GSCornerRadius = 25;
GSOffsetHorizontal = 25;
GSOffsetMakeStroke = 1;
GSOffsetPosition = 1;
GSOffsetVertical = 25;
};
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
}
);
kerningRTL = {
m01 = {
"@MMK_R_beh" = {
"@MMK_L_beh" = -50;
"@MMK_L_beh.high" = -50;
"heh-ar.medi" = -40;
};
"@MMK_R_beh.high" = {
"@MMK_L_beh" = -60;
};
"@MMK_R_heh" = {
"@MMK_L_alef" = -30;
};
"reh-ar" = {
"@MMK_L_hah" = 110;
};
"sad-ar.init" = {
"reh-ar.fina" = -50;
"waw-ar.fina" = -30;
};
"sad-ar.medi" = {
"reh-ar.fina" = -50;
"waw-ar.fina" = -30;
};
};
};
metrics = (
{
type = ascender;
},
{
type = baseline;
},
{
type = descender;
},
{
filter = "script == \"arabic\"";
name = "Alef Height";
},
{
filter = "script == \"arabic\"";
name = "Joining Line";
},
{
filter = "script == \"arabic\"";
name = "Meem Depth";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2024 The Astrolabe Project Authors (github.com/aliftype/astrolabe)";
},
{
language = ARA;
value = "حقوق النسخ ٢٠٢٤ لمؤلفي مشروع أسطرلاب (github.com/aliftype/astrolabe)";
}
);
},
{
key = descriptions;
values = (
{
language = ENG;
value = "Astrolabe (أسطرلاب) is a Kufic typeface";
},
{
language = ARA;
value = "أسطرلاب هو خط كوفي";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Khaled Hosny";
},
{
language = ARA;
value = "خالد حسني";
}
);
},
{
key = designerURL;
value = "https://aliftype.com";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>";
}
);
},
{
key = licenseURL;
value = "https://www.gnu.org/licenses/agpl-3.0.html";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Alif Type";
},
{
language = ARA;
value = "حروف ألف";
}
);
},
{
key = manufacturerURL;
value = "https://aliftype.com";
},
{
key = vendorID;
value = ALIF;
}
);
settings = {
gridLength = 50;
gridSubDivision = 50;
keyboardIncrementHuge = 50;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
